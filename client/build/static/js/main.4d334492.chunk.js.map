{"version":3,"sources":["images/image.png","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Navbar/Navbar.jsx","components/News/News.jsx","components/FetchNews.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","StylesProvider","container","Grid","spacing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","require","config","path","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","ButtonAppBar","classes","AppBar","position","Toolbar","IconButton","edge","aria-label","Button","flexWrap","margin","News","props","newsData","setNewsData","fetchNews","dailyNews","response","gimmeMyData","docs","Paper","href","web_url","abstract","App","state","news","fetchedData","setState","this","fetchedNews","image","alt","src","coronaImage","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d334492.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3xBTv\",\"card\":\"Cards_card__34ve7\",\"infected\":\"Cards_infected__M3Orb\",\"recovered\":\"Cards_recovered__2qMlq\",\"deaths\":\"Cards_deaths__119RZ\"};","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Grid,\n  StylesProvider,\n} from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from 'classnames';\nimport styles from \"./Cards.module.css\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  /*  console.log('props', props); */\n\n  console.log(confirmed);\n\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n\n  return (\n    <div className={StylesProvider.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">\n              Number of activate cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">\n              Number of recoveries from COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\n            </Typography>\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n            <Typography variant=\"body2\">\n              Number of deaths caused by COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from 'axios';\nimport { CountryPicker } from '../components';\nrequire('dotenv').config({ path: '../../.env' });\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate }\n    } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate\n    }));\n\n    return modifiedData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries }\n    } = await axios.get(`${url}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nimport 'chart.js';\n\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255,0,0,0.5)',\n            fill: true\n          }\n        ]\n      }}\n    />\n  ) : null;\n\n  // console.log(confirmed, recovered, deaths);\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: ['Infected', 'Recovered', 'Deaths'],\n        datasets: [\n          {\n            label: 'People',\n            backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)'],\n            data: [confirmed.value, recovered.value, deaths.value]\n          }\n        ]\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` }\n      }}\n    />\n  ) : null;\n\n  return <div className={styles.container}>{country ? barChart : lineChart}</div>;\n};\n\nexport default Chart;\n","import React, { useEffect, useState } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n  // console.log(fetchedCountries);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=''>Global</option>\n        {fetchedCountries.map((country, i) => (\n          <option value={country} key={i}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n      \n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Home\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport axios from 'axios';\r\n// import { fetchNews } from '../../api';\r\n// import fetchNews from '../FetchNews';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n      // width: theme.spacing('75%'),\r\n      // height: theme.spacing('100%')\r\n    }\r\n  }\r\n}));\r\n\r\nfunction News(props) {\r\n  const [newsData, setNewsData] = useState();\r\n\r\n  const fetchNews = async () => {\r\n    try {\r\n      let dailyNews = await axios.get('/api/news');\r\n      console.log('dailyNews', dailyNews.data.response);\r\n      return dailyNews.data.response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    let gimmeMyData = await fetchNews();\r\n    setNewsData(gimmeMyData);\r\n    console.log('gimmeMyData', gimmeMyData);\r\n  }, []);\r\n\r\n  // export const fetchNews = async () => {\r\n  //   try {\r\n  //     let dailyNews = await axios.get('/api/news');\r\n  //     console.log(dailyNews);\r\n  //   } catch (error) {}\r\n  // };\r\n\r\n  const classes = useStyles();\r\n\r\n  console.log('newsData', newsData);\r\n  console.log('newsData?.docs', newsData?.docs);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper>\r\n        <h3>Coronavirus News</h3>\r\n\r\n        <ul>\r\n          {newsData?.docs\r\n            ? newsData.docs.map((item, i) => (\r\n                <>\r\n                  <li key={i + 'li'}>\r\n                    <a href={item.web_url}>{item.abstract}</a>\r\n                  </li>\r\n                </>\r\n              ))\r\n            : 'No data found'}\r\n        </ul>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst fetchNews = async () => {\r\n  try {\r\n    let dailyNews = await axios.get('/api/news');\r\n    console.log('dailyNews', dailyNews.data.response);\r\n    return dailyNews.data.response;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport default fetchNews;\r\n","import React from 'react';\n\nimport { Cards, Chart, CountryPicker, Navbar, News } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\nimport coronaImage from './images/image.png';\nimport fetchNews from './components/FetchNews';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n    news: ''\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    // console.log(fetchedData);\n    this.setState({ ...this.state, data: fetchedData });\n\n    const fetchedNews = await fetchNews();\n    console.log('fetchedNews', fetchedNews);\n\n    // set the news state to use as props\n    // this.setState({ ...this.state, news: fetchedNews.data.response });\n  }\n\n  // //getting news data from API to display on News component\n  // async componentDidMount() {\n  //   const fetchedNews = await fetchNews();\n  //   // console.log('fetchedNews', fetchedNews.data);\n\n  //   // set the news state to use as props\n  //   this.setState({ ...this.state, news: fetchedNews.data.response });\n  // }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    // console.log('fetcheddata', fetchedData);\n\n    // set the state\n    this.setState({ ...this.state, data: fetchedData, country });\n  };\n\n  render() {\n    const { data, country, news } = this.state;\n    return (\n      <div>\n        <Navbar />\n        <div className={styles.container}>\n          <img className={styles.image} alt='covid-19' src={coronaImage} />\n\n          <Cards data={data} />\n          <hr />\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\n          <Chart data={data} country={country} />\n          <News docs={news.docs} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import App from './App'\nimport ReactDOM from 'react-dom'\nimport React from 'react'\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3coYk\",\"image\":\"App_image__2S8Uh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2XWSR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2jjzk\"};"],"sourceRoot":""}